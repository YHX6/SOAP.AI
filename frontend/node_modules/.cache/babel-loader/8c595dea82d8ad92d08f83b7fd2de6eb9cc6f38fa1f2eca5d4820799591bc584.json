{"ast":null,"code":"var _jsxFileName = \"/Users/yhx67/Projects/ZH/erisedstory-speech-therapy/frontend/src/components/SpeechButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AudioIcon from \"../assets/icons/audio-fill.svg\";\nimport AudioCurrentIcon from \"../assets/icons/audio.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nlet recognition = null;\nif (SpeechRecognition) {\n  recognition = new SpeechRecognition();\n  recognition.continuous = false;\n  recognition.lang = 'en-US';\n  recognition.interimResults = false;\n}\nconst SpeechButton = ({\n  onTranscript\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  useEffect(() => {\n    if (!recognition) return;\n    const handleResult = event => {\n      const transcript = event.results[0][0].transcript;\n      onTranscript(transcript); // Call the callback function with the transcript\n      setIsListening(false);\n    };\n    recognition.onresult = handleResult;\n    if (isListening) {\n      recognition.start();\n    }\n    return () => {\n      recognition.stop();\n    };\n  }, [isListening, onTranscript]);\n  const toggleListen = () => setIsListening(prevState => !prevState);\n  if (!SpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your browser does not support Speech Recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleListen,\n    children: isListening ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: AudioCurrentIcon,\n      alt: \"click button for audio input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: AudioIcon,\n      alt: \"click button for audio input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 85\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n_s(SpeechButton, \"ey5CU53e1h04OPZhSsl0oDRDiik=\");\n_c = SpeechButton;\nexport default SpeechButton;\nvar _c;\n$RefreshReg$(_c, \"SpeechButton\");","map":{"version":3,"names":["React","useState","useEffect","AudioIcon","AudioCurrentIcon","jsxDEV","_jsxDEV","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","lang","interimResults","SpeechButton","onTranscript","_s","isListening","setIsListening","handleResult","event","transcript","results","onresult","start","stop","toggleListen","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/yhx67/Projects/ZH/erisedstory-speech-therapy/frontend/src/components/SpeechButton.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AudioIcon from \"../assets/icons/audio-fill.svg\";\nimport AudioCurrentIcon from \"../assets/icons/audio.svg\";\n\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nlet recognition = null;\n\nif (SpeechRecognition) {\n  recognition = new SpeechRecognition();\n  recognition.continuous = false;\n  recognition.lang = 'en-US';\n  recognition.interimResults = false;\n}\n\nconst SpeechButton = ({ onTranscript }) => {\n  const [isListening, setIsListening] = useState(false);\n\n  useEffect(() => {\n    if (!recognition) return;\n\n    const handleResult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      onTranscript(transcript); // Call the callback function with the transcript\n      setIsListening(false);\n    };\n\n    recognition.onresult = handleResult;\n\n    if (isListening) {\n      recognition.start();\n    }\n\n    return () => {\n      recognition.stop();\n    };\n  }, [isListening, onTranscript]);\n\n  const toggleListen = () => setIsListening(prevState => !prevState);\n\n  if (!SpeechRecognition) {\n    return <p>Your browser does not support Speech Recognition.</p>;\n  }\n\n  return (\n      <button onClick={toggleListen}>\n        {isListening ? \n            <img src={AudioCurrentIcon} alt=\"click button for audio input\"></img> : <img src={AudioIcon} alt=\"click button for audio input\"></img>\n        }\n        </button>\n  );\n};\n\nexport default SpeechButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,gBAAgB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzD,MAAMC,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;AACpF,IAAIC,WAAW,GAAG,IAAI;AAEtB,IAAIH,iBAAiB,EAAE;EACrBG,WAAW,GAAG,IAAIH,iBAAiB,CAAC,CAAC;EACrCG,WAAW,CAACC,UAAU,GAAG,KAAK;EAC9BD,WAAW,CAACE,IAAI,GAAG,OAAO;EAC1BF,WAAW,CAACG,cAAc,GAAG,KAAK;AACpC;AAEA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,WAAW,EAAE;IAElB,MAAMS,YAAY,GAAIC,KAAK,IAAK;MAC9B,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;MACjDN,YAAY,CAACM,UAAU,CAAC,CAAC,CAAC;MAC1BH,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDR,WAAW,CAACa,QAAQ,GAAGJ,YAAY;IAEnC,IAAIF,WAAW,EAAE;MACfP,WAAW,CAACc,KAAK,CAAC,CAAC;IACrB;IAEA,OAAO,MAAM;MACXd,WAAW,CAACe,IAAI,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,CAACR,WAAW,EAAEF,YAAY,CAAC,CAAC;EAE/B,MAAMW,YAAY,GAAGA,CAAA,KAAMR,cAAc,CAACS,SAAS,IAAI,CAACA,SAAS,CAAC;EAElE,IAAI,CAACpB,iBAAiB,EAAE;IACtB,oBAAOD,OAAA;MAAAsB,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjE;EAEA,oBACI1B,OAAA;IAAQ2B,OAAO,EAAEP,YAAa;IAAAE,QAAA,EAC3BX,WAAW,gBACRX,OAAA;MAAK4B,GAAG,EAAE9B,gBAAiB;MAAC+B,GAAG,EAAC;IAA8B;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAAG1B,OAAA;MAAK4B,GAAG,EAAE/B,SAAU;MAACgC,GAAG,EAAC;IAA8B;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElI,CAAC;AAEjB,CAAC;AAAChB,EAAA,CApCIF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}